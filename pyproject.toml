################################################################################
# PEP 621 Project Metadata                                                     #
################################################################################

# see https://peps.python.org/pep-0621/

[project]
name = "probnum"
description = "Probabilistic Numerics in Python."
readme = "README.md"
requires-python = ">=3.8,<3.11"
license = {file = "LICENSE.txt"}
authors = [
    {name = "Jonathan Wenger",   email = "jonathan.wenger@uni-tuebingen.de"},
    {name = "Nicholas Kraemer",  email = "nicholas.kraemer@uni-tuebingen.de "},
    {name = "Marvin Pfoertner",  email = "marvin.pfoertner@uni-tuebingen.de"},
    {name = "Jonathan Schmidt",  email = "jonathan.schmidt@uni-tuebingen.de"},
    {name = "Nathanael Bosch",   email = "nathanael.bosch@uni-tuebingen.de"},
    {name = "Alexandra Gessner", email = "alexandra.gessner@uni-tuebingen.de"},
    {name = "Toni Karvonen",     email = "toni.karvonen@helsinki.fi"},
    {name = "Maren Mahsereci",   email = "maren.mahsereci@uni-tuebingen.de "},
]
maintainers = [
    {name = "Jonathan Wenger",   email = "jonathan.wenger@uni-tuebingen.de"},
    {name = "Nicholas Kraemer",  email = "nicholas.kraemer@uni-tuebingen.de "},
    {name = "Marvin Pfoertner",  email = "marvin.pfoertner@uni-tuebingen.de"},
    {name = "Maren Mahsereci",   email = "maren.mahsereci@uni-tuebingen.de "},
    {name = "Jonathan Schmidt",  email = "jonathan.schmidt@uni-tuebingen.de"},
]
keywords = [
    "probabilistic-numerics",
    "machine-learning",
    "numerical-methods",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "numpy>=1.20",
    "numpy>=1.21.3; python_version>='3.10'",
    "scipy>=1.4",
    "scipy>=1.8.0; python_version>='3.10'",
]
dynamic = ["version"]

[project.optional-dependencies]
# Automatic Differentiation
jax = [
    "jax[cpu]<0.3.5; platform_system!='Windows'",
]
# Problem zoo
zoo = [
    "%(jax)s",
    "tqdm>=4.0",
    "requests>=2.0",
]
# Calibration in the probabilistic linear solver
pls_calib = [
    "GPy",
    # GPy can't be imported without matplotlib.
    # This is and should not be a ProbNum dependency.
    "matplotlib",
]
# Full installation
full = [
    "%(jax)s",
    "%(zoo)s",
    "%(pls_calib)s",
]

[project.urls]
github = "https://github.com/probabilistic-numerics/probnum"
documentation = "https://probnum.readthedocs.io/en/stable/"
benchmarks = "https://probabilistic-numerics.github.io/probnum-benchmarks/benchmarks/"

################################################################################
# PEP 518 Build System Configuration                                           #
################################################################################

# see https://peps.python.org/pep-0518/

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
    "setuptools_scm[toml]>=6.0",
]
build-backend = "setuptools.build_meta"

# see https://setuptools.pypa.io/en/stable/userguide/pyproject_config.html#setuptools-specific-configuration

[tool.setuptools]
platforms = [
    "any",
]
zip-safe = false
packages = ["probnum"]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools_scm]
local_scheme = "dirty-tag"
write_to = "src/probnum/_version.py"
write_to_template = """
# pylint: skip-file
# coding: utf-8
# file generated by setuptools_scm
# don't change, don't track in version control
version = \"{version}\"
"""

################################################################################
# Testing Configuration                                                         #
################################################################################

# see https://docs.pytest.org/en/stable/reference/customize.html
# see https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref

[tool.pytest.ini_options]
addopts = [
    "--verbose",
    "--doctest-modules",
]
norecursedirs = [
    ".*",
    "*.egg*",
    "dist",
    "build",
    ".tox"
]
testpaths = [
    "src",
    "tests"
]
doctest_optionflags = "NUMBER NORMALIZE_WHITESPACE"
filterwarnings = [
    # "import jax" implies "import flatbuffers", which raises the following warning.
    # Ignore similar to https://github.com/google/jax/blob/main/pytest.ini
    "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning:flatbuffers.*"
]

################################################################################
# Linting Configuration                                                        #
################################################################################

[tool.pylint.master]
extension-pkg-whitelist = [
    "numpy",
]
load-plugins = [
    "pylint.extensions.check_elif",
    "pylint.extensions.docparams",
    "pylint.extensions.docstyle",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.mccabe",
]

[tool.pylint.messages_control]
disable = [
    # Exceptions suggested by Black:
    # https://github.com/psf/black/blob/7f75fe3669ebf0627b1b0476a6d02047e909b959/docs/compatible_configs.md#black-compatible-configurations
    "bad-continuation",
    "bad-whitespace",
    # We allow TODO comments in the following format: `# TODO (#[ISSUE NUMBER]): This needs to be done.`
    "fixme",
    # We want to use "mathematical notation" to name some of our variables, e.g. `A` for matrices
    "invalid-name",
    # Temporary ignore, see https://github.com/probabilistic-numerics/probnum/discussions/470#discussioncomment-1998097 for an explanation
    "missing-return-doc",
    "missing-yield-doc",
]

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.design]
max-args = 10
max-complexity = 14
max-locals = 20

[tool.pylint.similarities]
ignore-imports = "yes"

################################################################################
# Formatting Configuration                                                     #
################################################################################

# see https://black.readthedocs.io/en/stable/usage_and_configuration/index.html

[tool.black]
include = '\.pyi?$'
# If `exclude` is not set, `black` excludes all files listed in `.gitignore`.
# The following option extends this list of ignored files.
# see https://black.readthedocs.io/en/stable/usage_and_configuration/file_collection_and_discovery.html#gitignore
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories in the root
# of the project.
/(
    \.git
    | \.hg
)/
'''

# see https://pycqa.github.io/isort/docs/configuration/config_files.html
# see https://pycqa.github.io/isort/docs/configuration/options.html

[tool.isort]
# see https://pycqa.github.io/isort/docs/configuration/profiles.html#black
profile = "black"
combine_as_imports = true
force_sort_within_sections = true
