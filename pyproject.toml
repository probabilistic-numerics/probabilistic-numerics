################################################################################
# PEP 621 Project Metadata                                                     #
################################################################################

# see https://peps.python.org/pep-0621/

[project]
name = "probnum"
description = "Probabilistic Numerics in Python."
readme = "README.md"
requires-python = ">=3.8,<3.11"
license = {file = "LICENSE.txt"}
keywords = [
    "probabilistic-numerics",
    "machine-learning",
    "numerical-methods",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "numpy>=1.20", "numpy>=1.21.3; python_version>='3.10'",
    "scipy>=1.4", "scipy>=1.8.0; python_version>='3.10'",
]
dynamic = [
    "version",
    "optional-dependencies",
]

# TODO (pypa/setuptools#3221): Optional dependencies that reference one another
# don't seem to be supported yet. Migrate the optional dependencies in `setup.py`
# here, once this is supported.
# [project.optional-dependencies]
# ...
# full = [
#     "%(jax)s",
#     "%(zoo)s",
#     "%(pls_calib)s",
# ]

[project.urls]
homepage = "https://probnum.readthedocs.io/en/stable/"
github = "https://github.com/probabilistic-numerics/probnum"
documentation = "https://probnum.readthedocs.io/en/stable/"
benchmarks = "https://probabilistic-numerics.github.io/probnum-benchmarks/benchmarks/"

################################################################################
# PEP 518 Build System Configuration                                           #
################################################################################

# see https://peps.python.org/pep-0518/

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
    "setuptools_scm[toml]>=6.0",
]
build-backend = "setuptools.build_meta"

# see https://setuptools.pypa.io/en/stable/userguide/pyproject_config.html#setuptools-specific-configuration

[tool.setuptools]
platforms = [
    "any",
]
zip-safe = false
packages = ["probnum"]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "probnum._version.version" }

[tool.setuptools_scm]
local_scheme = "dirty-tag"
write_to = "src/probnum/_version.py"
write_to_template = """
# pylint: skip-file
# coding: utf-8
# file generated by setuptools_scm
# don't change, don't track in version control
version = \"{version}\"
"""

################################################################################
# Testing Configuration                                                         #
################################################################################

# see https://docs.pytest.org/en/stable/reference/customize.html
# see https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref

[tool.pytest.ini_options]
addopts = [
    "--verbose",
    "--doctest-modules",
]
norecursedirs = [
    ".*",
    "*.egg*",
    "dist",
    "build",
    ".tox"
]
testpaths = [
    "src",
    "tests"
]
doctest_optionflags = "NUMBER NORMALIZE_WHITESPACE"
filterwarnings = [
    # "import jax" implies "import flatbuffers", which raises the following warning.
    # Ignore similar to https://github.com/google/jax/blob/main/pytest.ini
    "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning:flatbuffers.*"
]

# see https://coverage.readthedocs.io/en/stable/config.html

[tool.coverage.run]
branch = true
source = [
    "probnum",
]

[tool.coverage.paths]
source = [
    "src/",
    "*/site-packages/",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',
    # Don't complain about missing debug-only code:
    'def __repr__(self):',
    'if self\.debug',
    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',
    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:',
]

################################################################################
# Linting Configuration                                                        #
################################################################################

[tool.pylint.master]
extension-pkg-whitelist = [
    "numpy",
]
load-plugins = [
    "pylint.extensions.check_elif",
    "pylint.extensions.docparams",
    "pylint.extensions.docstyle",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.mccabe",
]

[tool.pylint.messages_control]
disable = [
    # Exceptions suggested by Black:
    # https://github.com/psf/black/blob/7f75fe3669ebf0627b1b0476a6d02047e909b959/docs/compatible_configs.md#black-compatible-configurations
    "bad-continuation",
    "bad-whitespace",
    # We allow TODO comments in the following format: `# TODO (#[ISSUE NUMBER]): This needs to be done.`
    "fixme",
    # We want to use "mathematical notation" to name some of our variables, e.g. `A` for matrices
    "invalid-name",
    # Temporary ignore, see https://github.com/probabilistic-numerics/probnum/discussions/470#discussioncomment-1998097 for an explanation
    "missing-return-doc",
    "missing-yield-doc",
]

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.design]
max-args = 10
max-complexity = 14
max-locals = 20

[tool.pylint.similarities]
ignore-imports = "yes"

################################################################################
# Formatting Configuration                                                     #
################################################################################

# see https://black.readthedocs.io/en/stable/usage_and_configuration/index.html

[tool.black]
include = '\.pyi?$'
# If `exclude` is not set, `black` excludes all files listed in `.gitignore`.
# The following option extends this list of ignored files.
# see https://black.readthedocs.io/en/stable/usage_and_configuration/file_collection_and_discovery.html#gitignore
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories in the root
# of the project.
/(
    \.git
    | \.hg
)/
'''

# see https://pycqa.github.io/isort/docs/configuration/config_files.html
# see https://pycqa.github.io/isort/docs/configuration/options.html

[tool.isort]
# see https://pycqa.github.io/isort/docs/configuration/profiles.html#black
profile = "black"
combine_as_imports = true
force_sort_within_sections = true

################################################################################
# tox Configuration                                                            #
################################################################################

[tool.tox]
legacy_tox_ini = '''
[tox]
envlist = py3, docs, benchmarks, black, isort, pylint

[testenv]
usedevelop = True
extras = full
deps = -r{toxinidir}/tests/requirements.txt
commands =
    pytest {posargs:--cov=probnum --no-cov-on-fail --cov-report=xml} --doctest-modules --color=yes

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
basepython = python3
passenv = HOME
deps = -r{toxinidir}/docs/requirements.txt
changedir = docs
whitelist_externals = make
commands =
    make clean
    make html

[testenv:format]
description = Code formatting with Black and isort (and possibly other tools in the future)
basepython = python3
deps = -r{toxinidir}/formatting-requirements.txt
commands =
    black .
    isort --profile black .

[testenv:black]
description = Check code formatting with Black
envdir = {toxworkdir}/format
basepython = {[testenv:format]basepython}
deps = {[testenv:format]deps}
commands = black --check --diff .

[testenv:isort]
description = Check import sorting with isort
envdir = {toxworkdir}/format
basepython = {[testenv:format]basepython}
deps = {[testenv:format]deps}
commands = isort --profile black --check --diff .

[testenv:benchmarks]
description = Dry run the benchmarks to check for errors
basepython = python3
deps = -r{toxinidir}/benchmarks/requirements.txt
changedir = benchmarks
commands =
    asv machine --yes
    asv run -e --quick --dry-run --strict --show-stderr --python=same

[testenv:pylint]
basepython = python3
description = Code linting with pylint
deps =
    -r{toxinidir}/tests/requirements.txt
    -r{toxinidir}/linting-requirements.txt
ignore_errors = true
commands =
    # Global Linting Pass
    pylint src/probnum --disable="no-member,abstract-method,arguments-differ,arguments-renamed,redefined-builtin,redefined-outer-name,too-many-instance-attributes,too-many-arguments,too-many-locals,too-many-lines,too-many-statements,too-many-branches,too-complex,too-few-public-methods,protected-access,unnecessary-pass,unused-variable,unused-argument,attribute-defined-outside-init,no-else-return,no-else-raise,no-self-use,else-if-used,consider-using-from-import,duplicate-code,line-too-long,missing-module-docstring,missing-class-docstring,missing-function-docstring,missing-param-doc,missing-type-doc,missing-raises-doc,useless-param-doc,useless-type-doc,missing-return-type-doc" --jobs=0
    # Per-package Linting Passes
    pylint src/probnum/diffeq --disable="redefined-outer-name,too-many-instance-attributes,too-many-arguments,too-many-locals,too-few-public-methods,protected-access,unnecessary-pass,unused-variable,unused-argument,no-else-return,no-else-raise,no-self-use,duplicate-code,line-too-long,missing-function-docstring,missing-param-doc,missing-type-doc,missing-raises-doc,missing-return-type-doc" --jobs=0
    pylint src/probnum/filtsmooth --disable="no-member,arguments-differ,too-many-arguments,too-many-locals,too-few-public-methods,protected-access,unused-variable,unused-argument,no-self-use,duplicate-code,useless-param-doc" --jobs=0
    pylint src/probnum/linalg --disable="no-member,abstract-method,arguments-differ,redefined-builtin,too-many-instance-attributes,too-many-arguments,too-many-locals,too-many-lines,too-many-statements,too-many-branches,too-complex,too-few-public-methods,protected-access,unused-argument,attribute-defined-outside-init,no-else-return,no-else-raise,no-self-use,else-if-used,duplicate-code,line-too-long,missing-module-docstring,missing-param-doc,missing-type-doc,missing-raises-doc,missing-return-type-doc" --jobs=0
    pylint src/probnum/linops --disable="too-many-instance-attributes,too-many-arguments,too-many-locals,protected-access,no-else-return,no-else-raise,else-if-used,missing-class-docstring,missing-function-docstring,missing-raises-doc,duplicate-code" --jobs=0
    pylint src/probnum/problems --disable="too-many-arguments,too-many-locals,unused-variable,unused-argument,else-if-used,consider-using-from-import,duplicate-code,line-too-long,missing-module-docstring,missing-function-docstring,missing-param-doc,missing-type-doc,missing-raises-doc" --jobs=0
    pylint src/probnum/quad --disable="too-many-arguments,missing-module-docstring" --jobs=0
    pylint src/probnum/randprocs --disable="arguments-differ,arguments-renamed,too-many-instance-attributes,too-many-arguments,too-many-locals,protected-access,unused-argument,no-else-return,duplicate-code,line-too-long,missing-module-docstring,missing-class-docstring,missing-function-docstring,missing-type-doc,missing-raises-doc,useless-param-doc,useless-type-doc,missing-return-type-doc" --jobs=0
    pylint src/probnum/randprocs/kernels --disable="duplicate-code" --jobs=0
    pylint src/probnum/randvars --disable="too-many-arguments,too-many-locals,too-many-branches,too-few-public-methods,protected-access,unused-argument,no-else-return,duplicate-code,line-too-long,missing-function-docstring,missing-raises-doc" --jobs=0
    pylint src/probnum/utils --disable="no-else-return,else-if-used,line-too-long,missing-raises-doc,missing-return-type-doc" --jobs=0
    # Benchmark and Test Code Linting Pass
    # pylint benchmarks --disable="unused-argument,attribute-defined-outside-init,missing-function-docstring" --jobs=0 # not a work in progress, but final
    pylint benchmarks --disable="unused-argument,attribute-defined-outside-init,no-else-return,no-self-use,consider-using-from-import,missing-module-docstring,missing-class-docstring,missing-function-docstring" --jobs=0
    # pylint tests --disable="missing-function-docstring" --jobs=0 # not a work in progress, but final
    pylint tests --disable="arguments-differ,redefined-outer-name,too-many-instance-attributes,too-many-arguments,too-many-locals,too-few-public-methods,protected-access,unnecessary-pass,unused-variable,unused-argument,unused-private-member,attribute-defined-outside-init,no-else-return,no-self-use,consider-using-from-import,duplicate-code,line-too-long,missing-module-docstring,missing-class-docstring,missing-function-docstring,missing-param-doc,missing-type-doc,missing-raises-doc,missing-return-type-doc,redundant-returns-doc" --jobs=0
'''
